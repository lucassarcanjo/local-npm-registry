{
	"name": "@cockpit/zera",
	"versions": {
		"1.2.137": {
			"name": "@cockpit/zera",
			"version": "1.2.137",
			"description": "cockpit design system",
			"author": {
				"name": "Cockpit Team"
			},
			"license": "MIT",
			"repository": {
				"type": "git",
				"url": "Cockpit Team/cockpit-ds"
			},
			"main": "dist/index.js",
			"module": "dist/index.modern.js",
			"source": "src/index.ts",
			"engines": {
				"node": ">=10"
			},
			"scripts": {
				"build": "microbundle-crl --no-compress --format modern,cjs",
				"start": "microbundle-crl watch --no-compress --format modern,cjs",
				"prepare": "husky install",
				"pre-push": "run-s test:coverage build",
				"lint": "eslint src/**/*.{ts,tsx} src/**/*.stories.tsx --fix",
				"test": "cross-env CI=1 react-scripts test --env=jsdom",
				"test:staged": "cross-env CI=true react-scripts test --env=jsdom --findRelatedTests",
				"test:coverage": "cross-env CI=true react-scripts test --env=jsdom --coverage",
				"test:watch": "react-scripts test --env=jsdom",
				"predeploy": "cd example && yarn install && yarn run build",
				"storybook": "start-storybook -p 6006 -s public",
				"build-storybook": "build-storybook -s public",
				"addIcon": "svgr --ext=tsx --template src/Resources/Template/index.ts --typescript -d src/Resources/SvgComponents/ src/Resources/Svg/$ICON"
			},
			"peerDependencies": {
				"polished": "^4.1.0",
				"react": "^16.0.0",
				"react-loader-spinner": "^4.0.0",
				"react-router-dom": "^5.2.0",
				"react-verification-input": "^2.0.4",
				"styled-components": "^5.2.1"
			},
			"devDependencies": {
				"@babel/core": "^7.12.13",
				"@storybook/addon-actions": "^6.1.17",
				"@storybook/addon-essentials": "^6.1.17",
				"@storybook/addon-links": "^6.1.17",
				"@storybook/react": "^6.1.17",
				"@svgr/cli": "^5.5.0",
				"@testing-library/jest-dom": "^5.16.1",
				"@testing-library/react": "^12.1.2",
				"@testing-library/user-event": "^13.5.0",
				"@types/jest": "^27.0.3",
				"@types/jsdom": "^16.2.13",
				"@types/node": "^12.12.38",
				"@types/react": "^16.9.27",
				"@types/react-dom": "^16.9.7",
				"@types/react-input-mask": "^3.0.0",
				"@types/react-loader-spinner": "^4.0.0",
				"@types/react-pdf": "^5.7.1",
				"@types/react-router-dom": "^5.1.7",
				"@types/react-text-mask": "^5.4.7",
				"@types/styled-components": "^5.1.7",
				"@typescript-eslint/eslint-plugin": "^5.0.0",
				"@typescript-eslint/parser": "^5.0.0",
				"babel-eslint": "^10.0.3",
				"babel-loader": "8.1.0",
				"cross-env": "^7.0.2",
				"eslint": "^8.0.0",
				"eslint-config-prettier": "^6.7.0",
				"eslint-config-standard": "^14.1.0",
				"eslint-config-standard-react": "^9.2.0",
				"eslint-plugin-import": "^2.18.2",
				"eslint-plugin-node": "^11.0.0",
				"eslint-plugin-prettier": "^3.1.1",
				"eslint-plugin-promise": "^4.2.1",
				"eslint-plugin-react": "7.28.0",
				"eslint-plugin-standard": "^4.0.1",
				"html-webpack-plugin": "^5.5.0",
				"husky": "^7.0.4",
				"jest": "^27.4.3",
				"jsdom": "^19.0.0",
				"lint-staged": "^11.2.6",
				"microbundle-crl": "^0.13.10",
				"npm-run-all": "^4.1.5",
				"polished": "^4.1.0",
				"prettier": "^2.5.1",
				"react": "^16.13.1",
				"react-dom": "^16.13.1",
				"react-hook-form": "7",
				"react-scripts": "5.0.0",
				"styled-components": "^5.2.1",
				"ts-jest": "^27.1.1",
				"typescript": "^3.7.5"
			},
			"files": [
				"dist"
			],
			"dependencies": {
				"date-fns": "^2.28.0",
				"react-input-mask": "3.0.0-alpha.0",
				"react-loader-spinner": "^4.0.0",
				"react-pdf": "^5.7.2",
				"react-router-dom": "^5.2.0",
				"react-verification-input": "^2.0.4"
			},
			"jest": {
				"moduleNameMapper": {
					"@test-utils": "<rootDir>/src/test-utils",
					"@date-utils": "<rootDir>/src/utils/date"
				},
				"collectCoverageFrom": [
					"!<rootDir>/**/*.stories.{ts,tsx,js,jsx}",
					"!<rootDir>/**/index.ts",
					"!<rootDir>/**/models/*"
				]
			},
			"lint-staged": {
				"*.{ts,tsx}": [
					"npm run test:staged"
				]
			},
			"types": "./dist/index.d.ts",
			"readmeFilename": "README.md",
			"gitHead": "24d2772370b063776a62e9bbb7af3db5eb3a8112",
			"_id": "@cockpit/zera@1.2.137",
			"_nodeVersion": "16.16.0",
			"_npmVersion": "8.15.1",
			"dist": {
				"integrity": "sha512-1ai/MamXmfmCq1Is/csPGthQxLyfEjCxu5IT+FZdIUTLryCfLVZ6viI6tc6PZXon0ESblCM4lon3pvZQJj95pA==",
				"shasum": "fee98dc3a4a0bca2562ff2865af9b5d2ea27abca",
				"tarball": "http://localhost:4873/@cockpit/zera/-/@cockpit/zera-1.2.137.tgz"
			},
			"contributors": []
		}
	},
	"time": {
		"modified": "2022-08-18T13:53:59.347Z",
		"created": "2022-08-18T13:53:59.347Z",
		"1.2.137": "2022-08-18T13:53:59.347Z"
	},
	"users": {},
	"dist-tags": {
		"latest": "1.2.137"
	},
	"_uplinks": {},
	"_distfiles": {},
	"_attachments": {
		"zera-1.2.137.tgz": {
			"shasum": "fee98dc3a4a0bca2562ff2865af9b5d2ea27abca",
			"version": "1.2.137"
		}
	},
	"_rev": "3-ce5f4d99d30afbbe",
	"_id": "@cockpit/zera",
	"readme": "<h1 align=\"center\">\nCockpit zera\n</h1>\n\n <p align=\"center\">O Cockpit Zera √© uma lib de componentes UI dos cockpits desenvolvidos pelo Einstein.</p>\n\n### Tabela de conte√∫dos\n\n---\n\n<!--ts-->\n\n- [Status](#Testes)\n- [Pr√© requisitos](#Testes)\n- [Tecnologias](#Sobre)\n- [Git flow](#Gitflow)\n- [Documenta√ß√£o de componentes](#Storybook)\n\n### Status\n\n---\n\n<h4> Pronto para uso </h4>\n\n### Pr√© requisitos\n\n---\n\nAntes de come√ßar, voc√™ vai precisar ter instalado em sua m√°quina as seguintes ferramentas:\n[Git](<[https://git-scm.com](https://git-scm.com/)>), [Node.js](<[https://nodejs.org/en/](https://nodejs.org/en/)>). Al√©m disto √© bom ter um editor para trabalhar com o c√≥digo como [VSCode](<[https://code.visualstudio.com/](https://code.visualstudio.com/)>)\n\n### üõ† Tecnologias\n\n---\n\nAs seguintes ferramentas foram usadas na constru√ß√£o do projeto:\n\n- [Node.js](https://nodejs.org/en/)\n- [React](https://pt-br.reactjs.org/)\n- [React Hook Form](https://react-hook-form.com/)\n- [Storybook](https://www.typescriptlang.org/)\n- [Styled Components](https://styled-components.com/)\n- [Polished](https://polished.js.org/)\n\n### Gitflow\n\nNosso fluxo √© composto da seguinte maneira:\n\n<img src=\"https://wac-cdn.atlassian.com/dam/jcr:a9cea7b7-23c3-41a7-a4e0-affa053d9ea7/04%20(1).svg?cdnVersion=1481\"/>\n\nTodas altera√ß√µes devem ser criadas em uma branch a partir da **master**, a pipeline roda a partir da master e o processo de build ocorrer√° automaticamente.\n\nPara commits, existe um padr√£o pr√©-definido:\n\n**formato**: `<type>(<scope>): <subject>`\n**exemplo**: `feat(pages/clinics): docs`\n\nVoc√™ pode fazer um _commit_ utilizando o comando `yarn commit` ou utilizando o formato correto com `git commit -m \"\" `.\n\n### Documenta√ß√£o dos componentes\n\nToda parte de desenvolvimento e documenta√ß√£o dos componentes fica pela responsabilidade do **Storybook**, uma ferramenta para desenvolver componentes de UI isoladamente.\n\nPara criar um storybook para um componente, ser√° apenas no caso do componente ser compartilhado em mais de um local, sendo assim, ele dever√° ser din√¢mico e responsivo.\n\n### Publica√ß√£o de uma nova vers√£o\n\nPara realizar a publica√ß√£o de uma nova vers√£o da biblioteca √© necess√°rio apenas realizar o push da branch em que se estiver trabalhando e automaticamente o husky far√° o versionamento e ir√° gerar um commit e uma git tag com a nova vers√£o. Ap√≥s isso deve-se abrir uma Pull Request para a branch master que ao ser completada ir√° executar a pipeline de publica√ß√£o que por sua vez ser√° respons√°vel por gerar um novo artefato no Azure com a √∫ltima vers√£o da biblioteca.\n\nExemplo:\n\n1 - Criar uma nova branch no formato: <tag>/<branch-name>\n2 - git add .\n3 - git commit -m \"<commit-message>\"\n4 - git push --set-upstream origin <tag>/<branch-name>\n5 - (Opcional) Verificar se foi gerado um commit com o n√∫mero da nova vers√£o no git log\n6 - Criar uma PR no Azure para a branch master\n7 - Ao completar a PR esperar a pipeline executar por completo\n\n## License\n\ntest ¬© [Cockpit Team](https://github.com/Cockpit Team)\n"
}